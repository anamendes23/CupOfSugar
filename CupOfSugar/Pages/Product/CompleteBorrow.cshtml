@page "{id}"
@using CupOfSugar.WebSite.Services
@using CupOfSugar.WebSite.Models
@inject JsonFileProductService ProductService
@model CupOfSugar.Pages.Product.CompleteBorrowModel

@{
    ViewData["Title"] = "Confirm Borrow page";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<!-- Start Page title -->
<h1 class="read-title">Yay! Your item was picked up :)</h1>
<br />
<!-- End Page title -->

<div class="container">
    <!-- Start of cancellation confirmation section -->
    <form method="post">
        <h2 class="text-center">Confirm that this borrow is completed:</h2>
        @Html.HiddenFor(x => x.Product.Id)
        @Html.HiddenFor(x => x.Product.Title)
        @Html.HiddenFor(x => x.Product.Image)
        @Html.HiddenFor(x => x.Product.Quantity)
        @Html.HiddenFor(x => x.Product.Lender)
        @Html.HiddenFor(x => x.Product.Address)
        @Html.HiddenFor(x => x.Product.Phone)
        @Html.HiddenFor(x => x.Product.Category)
        @Html.HiddenFor(x => x.Product.Status)
        @Html.HiddenFor(x => x.Product.Unit)
        @for (int i = 0; i < Model.Product.Names.Count; i++)
        {
            @Html.HiddenFor(x => x.Product.BorrowQuantities[i])
            @Html.HiddenFor(x => x.Product.Names[i])}
        @Html.HiddenFor(x => x.num)
        <div class="borrow-info-card-sm">
            <div class="borrow-info-text card-text">@Model.Product.Names[@Model.num] - @Model.Product.BorrowQuantities[@Model.num] @UnitTypeEnumExtensions.DisplayName((UnitTypeEnum)Enum.Parse(typeof(UnitTypeEnum), Model.Product.Unit))</div>
            <input type="submit" value="Complete Borrow" class="btn btn-green" />
        </div>
    </form>
    <!-- End of cancellation confirmation section -->
    <!-- Start of product information -->
    <div class="product-info-card product-info-card-center">
        <div class="product-info">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <h3 class="title" id="productTitle">@Model.Product.Title</h3>
            <p class="card-text">Quantity: @Model.Product.Quantity @UnitTypeEnumExtensions.DisplayName((UnitTypeEnum)Enum.Parse(typeof(UnitTypeEnum), Model.Product.Unit))</p>
            <p class="card-text">Lender: @Model.Product.Lender</p>
            <p class="card-text product-info-card-address">Address: @Model.Product.Address</p>
            <p class="card-text">Phone: @Model.GetFormattedPhone()</p>
            <p class="card-text">Category: @Model.Product.Category</p>
            <p class="card-text">Status: @Model.Product.Status</p>
        </div>
        <img id="one" src='@Model.Product.Image' onerror="this.onerror=null;this.src='../images/default-@Model.Product.Category.ToLower()\.png'">
    </div>
    <!-- End of product information -->
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}