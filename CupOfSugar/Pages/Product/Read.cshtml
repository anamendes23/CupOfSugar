@page "{id}"
@using CupOfSugar.WebSite.Services
@using CupOfSugar.WebSite.Models
@inject JsonFileProductService ProductService
@model CupOfSugar.Pages.Product.ReadModel
@{
    ViewData["Title"] = "Read Page";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<!-- Start Back Button to revert back using the user history-->
<form>
    <input type="button" value="Go back!" onclick="history.back()">
</form>
<br />
<!-- End Back Button -->
<!-- Start Page title -->
<h1 class="read-title">Product Information</h1>
<br />
<!-- End Page title -->
<div class="content product-info-card">
    <!-- Start Product Data -->
    <div class="product-info-card">
        <img id="one" src='@Model.Product.Image' onerror="this.onerror=null;this.src='../images/default-@Model.Product.Category.ToLower()\.png'">
        <div class="product-info">
            <h3 class="title" id="productTitle">@Model.Product.Title</h3>
            <p class="card-text">Quantity: @Model.Product.Quantity @UnitTypeEnumExtensions.DisplayName((UnitTypeEnum)Enum.Parse(typeof(UnitTypeEnum), Model.Product.Unit))</p>
            <p class="card-text">Lender: @Model.Product.Lender</p>
            <p class="card-text">Address: @Model.Product.Address</p>
            <p class="card-text">Phone: @Model.GetFormattedPhone()</p>
            <p class="card-text">Category: @Model.Product.Category</p>
            <p class="card-text">Status: @Model.Product.Status</p>
        </div>
    </div>
    <!-- End Product Data -->
    <div class="verticalLine"></div>
    <!-- Start list of borrows -->
    <div>
        <p class="card-text">Pending Borrows:</p>
        <div class="borrows-info-card">
            @if (Model.Product.Names != null)
            {
                @for (int i = 0; i < Model.Product.Names.Count; i++)
                {
                    <div class="borrow-info-card">
                        <div class="borrow-info-text card-text">@Model.Product.Names[i] - @Model.Product.BorrowQuantities[i] @UnitTypeEnumExtensions.DisplayName((UnitTypeEnum)Enum.Parse(typeof(UnitTypeEnum), Model.Product.Unit))</div>
                        <div>
                            <a asp-page="ConfirmPickup" asp-route-id="@Model.Product.Id&@i" id="confirm_pickup" class="btn btn-green">Confirm Pickup</a>&nbsp;&nbsp;
                            <a asp-page="Cancel" asp-route-id="@Model.Product.Id&@i" id="cancel_borrow" class="btn btn-red">Cancel Borrow</a>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <!-- End list of borrows -->
</div>
<hr class="read-page-divider" />
<!-- Start borrow form -->
<p class="card-text">Borrow this item:</p>
<form method="post">
    @Html.HiddenFor(x => x.Product.Id)
    @Html.HiddenFor(x => x.Product.Address)
    @Html.HiddenFor(x => x.Product.Category)
    @Html.HiddenFor(x => x.Product.Image)
    @Html.HiddenFor(x => x.Product.Lender)
    @Html.HiddenFor(x => x.Product.Phone)
    @Html.HiddenFor(x => x.Product.Quantity)
    @Html.HiddenFor(x => x.Product.Status)
    @Html.HiddenFor(x => x.Product.Title)
    @Html.HiddenFor(x => x.Product.Unit)
    @if (Model.Product.Names != null)
    {
        @for (int i = 0; i < Model.Product.Names.Count; i++)
        {
            @Html.HiddenFor(x => x.Product.BorrowQuantities[i])
            @Html.HiddenFor(x => x.Product.Names[i])
        }
    }
    <div class="product-info-card">
        <div class="row form-group">
            <label asp-for="borrower" class="col-sm-3 col-form-label control-label">Name:</label>
            <input asp-for="borrower" class="col-sm-6 form-control" />
            <span asp-validation-for="borrower" class="text-danger"></span>
        </div>
        <div class="row form-group">
            <label asp-for="quantity" class="col-sm-4 col-form-label control-label">Quantity:</label>
            <input asp-for="quantity" class="col-sm-6 form-control" />
            <span asp-validation-for="quantity" class="text-danger"></span>
        </div>
        <input id="borrow" type="submit" value=@Model.borrowBtnValue disabled="@Model.borrowBtnStatus" class="btn btn-red btn-thinner" /> &nbsp; &nbsp;
    </div>
</form>

<!-- End borrow form -->
<hr class="read-page-divider" />

<!-- Start Buttons to Update and Delete item -->
<div class="read-buttons">
    <a asp-page="Update" asp-route-id="@Model.Product.Id" class="btn btn-green btn-monster">Update</a>
    <div class="btn-spacing"></div>
    <a asp-page="Delete" asp-route-id="@Model.Product.Id" class="btn btn-red btn-monster">Delete</a>
</div>
<!-- End Buttons to Update and Delete item -->