@page "{id}"
@using CupOfSugar.WebSite.Services
@using CupOfSugar.WebSite.Models
@inject JsonFileProductService ProductService
@model CupOfSugar.Pages.Product.DeleteModel

@{
    ViewData["Title"] = "Delete page";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<!-- Start Page title -->
<h1>Delete</h1>
<br />
<!-- End Page title -->

<div class="container">
    <form method="post">
        <!-- Start of product information -->

        <div class="product-info-card">
            <img id="one" src='@Model.Product.Image' onerror="this.onerror=null;this.src='../images/default-@Model.Product.Category.ToLower()\.png'">
            <div class="product-info">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @Html.HiddenFor(x => x.Product.Id)
                @Html.HiddenFor(x => x.Product.Title)
                @Html.HiddenFor(x => x.Product.Image)
                @Html.HiddenFor(x => x.Product.Quantity)
                @Html.HiddenFor(x => x.Product.Lender)
                @Html.HiddenFor(x => x.Product.Address)
                @Html.HiddenFor(x => x.Product.Phone)
                @Html.HiddenFor(x => x.Product.Category)
                @Html.HiddenFor(x => x.Product.Status)
                @Html.HiddenFor(x => x.Product.Unit)
                @if (Model.Product.Names != null)
                {
                    @for (int i = 0; i < Model.Product.Names.Count; i++)
                    {
                        @Html.HiddenFor(x => x.Product.BorrowQuantities[i])
                        @Html.HiddenFor(x => x.Product.Names[i])
                    }
                }
                <h3 class="title" id="productTitle">@Model.Product.Title</h3>
                <p class="card-text">Quantity: @Model.Product.Quantity @UnitTypeEnumExtensions.DisplayName((UnitTypeEnum)Enum.Parse(typeof(UnitTypeEnum), Model.Product.Unit))</p>
                <p class="card-text">Lender: @Model.Product.Lender</p>
                <p class="card-text product-info-card-address">Address: @Model.Product.Address</p>
                <p class="card-text">Phone: @Model.GetFormattedPhone()</p>
                <p class="card-text">Category: @Model.Product.Category</p>
                <p class="card-text">Status: @Model.Product.Status</p>
            </div>
        </div>
        <!-- End of product information -->
        <br />
        <br />
        <!-- Start of delete confirmation section -->
        <h2>Confirm Delete of this item</h2>
        <div class="form-group">
            <input type="submit" value="Delete" class="btn btn-primary" />
        </div>
        <!-- End of delete confirmation section -->
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
